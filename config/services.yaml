# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# General service configuration
services:
    _defaults:
        autowire: true       # Enables automatic dependency injection
        autoconfigure: true  # Automatically registers services (commands, event listeners, etc.)

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Logger service specifically for command chaining
    monolog.logger.command_chain:
        class: Monolog\Logger
        arguments: [ 'command_chain' ]
        calls:
            - [ pushHandler, [ '@monolog.handler.command_chain' ] ]

    # Log handler to write logs to a dedicated file
    monolog.handler.command_chain:
        class: Monolog\Handler\StreamHandler
        arguments: [ '%kernel.logs_dir%/command_chain.log', 'info' ]
        calls:
            - [ setFormatter, [ '@monolog.formatter.command_chain' ] ]

    # Log formatter for command chain logs
    monolog.formatter.command_chain:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] %%message%%\n"  # Log format
            - "Y-m-d H:i:s"  # Date format

    # Service definition for FooCommand
    App\FooBundle\Command\FooCommand:
        arguments:
            $logger: '@monolog.logger.command_chain'
        tags: [ 'console.command' ]

    # Service definition for BarCommand
    App\BarBundle\Command\BarCommand:
        arguments:
            $logger: '@monolog.logger.command_chain'
        tags: [ 'console.command' ]

    # Event listener for handling command chaining logic
    App\ChainCommandBundle\EventListener\CommandChainListener:
        arguments:
            $logger: '@monolog.logger.command_chain'
            $application: '@console.messenger.application'
        tags:
            - { name: kernel.event_subscriber }
